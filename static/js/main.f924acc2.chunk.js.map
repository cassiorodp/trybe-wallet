{"version":3,"sources":["images/bitcoin.gif","actions/index.js","pages/Login.js","components/WalletTable.js","components/WalletInput.js","components/WalletSelect.js","components/AddForm.js","components/EditForm.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/store.js","index.js"],"names":["module","exports","coinsLoading","type","coinsFail","error","spentSuccess","payload","exchangeRates","spent","fetchCoinAPI","a","fetch","apiResponse","json","apiJson","USDT","addSpent","dispatch","replaceItem","itemId","updatedItem","Login","props","state","email","password","buttonDisable","checkEmail","checkPassword","handleChange","bind","renderInputs","validateLogin","validateEmail","validatePassword","changePage","match","this","setState","length","target","id","value","history","storeEmail","push","htmlFor","className","data-testid","onChange","src","bitcoinGif","alt","disabled","onClick","React","Component","connect","getUserEmail","WalletTable","expenses","editExpenses","deleteExpenses","renderTableHead","map","item","key","style","textAlign","description","tag","method","currency","parseInt","toFixed","name","split","parseFloat","ask","wallet","selectedItem","editItem","WalletInputs","labelText","WalletSelect","ariaLabel","currencies","aria-label","coin","AddForm","addButton","handleExpenses","checkInputs","dispatchSpent","WalletInput","EditForm","handleEdit","dispatchEdit","Wallet","renderHeader","getCoinsOptions","totalExpenses","fetchCoins","reduce","itemAcc","convertedValue","bitcoinImage","user","coinsLabel","coins","Object","keys","App","exact","path","component","Boolean","window","location","hostname","INICIAL_STATE","action","isLoading","filter","find","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f924acc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bitcoin.1a3bd732.gif\";","// Coloque aqui suas actions\n\nexport const GET_USER_EMAIL = 'GET_USER_EMAIL';\n\nexport const COINS_LOADING = 'COINS_LOADING';\nexport const COINS_SUCCESS = 'COINS_SUCCESS';\nexport const COINS_FAIL = 'COINS_FAIL';\n\nexport const SPENT_SUCCESS = 'SPENT_SUCCESS';\n\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const EDIT_ITEM = 'EDIT_ITEM';\nexport const REPLACE_ITEM = 'REPLACE_ITEM';\n\nexport const getUserEmail = (payload) => ({\n  type: GET_USER_EMAIL,\n  email: payload,\n});\n\nconst coinsLoading = () => ({ type: COINS_LOADING });\nconst coinsSuccess = (coins) => ({\n  type: COINS_SUCCESS,\n  coins,\n});\nconst coinsFail = (error) => ({\n  type: COINS_FAIL,\n  error,\n});\n\nconst spentSuccess = (payload, exchangeRates) => ({\n  type: SPENT_SUCCESS,\n  spent: {\n    ...payload,\n    exchangeRates,\n  },\n});\n\nexport const deleteRow = (itemId) => ({\n  type: DELETE_ITEM,\n  itemId,\n});\n\n// Tip from Murilo Rainho\nconst fetchCoinAPI = async () => {\n  const apiResponse = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const apiJson = await apiResponse.json();\n  delete apiJson.USDT;\n  return apiJson;\n};\n\nexport const getCoins = () => async (dispatch) => {\n  dispatch(coinsLoading);\n  try {\n    const coinsLabel = await fetchCoinAPI();\n    // Tip from Murilo Rainho\n    dispatch(coinsSuccess(Object.keys(coinsLabel)));\n  } catch (error) {\n    dispatch(coinsFail(error));\n  }\n};\n\nexport const addSpent = (payload) => async (dispatch) => {\n  dispatch(coinsLoading);\n  try {\n    const exchangeRates = await fetchCoinAPI();\n    dispatch(spentSuccess(payload, exchangeRates));\n  } catch (error) {\n    dispatch(coinsFail(error));\n  }\n};\n\nexport const editItem = (payload) => ({\n  type: EDIT_ITEM,\n  selectedItem: payload,\n  editItem: true,\n});\n\nexport const replaceItem = (itemId, payload) => ({\n  type: REPLACE_ITEM,\n  itemId,\n  updatedItem: payload,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport bitcoinGif from '../images/bitcoin.gif';\nimport { getUserEmail } from '../actions';\nimport '../styles/login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      buttonDisable: true,\n      checkEmail: false,\n      checkPassword: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.renderInputs = this.renderInputs.bind(this);\n    this.validateLogin = this.validateLogin.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n    this.changePage = this.changePage.bind(this);\n  }\n\n  validateEmail(email) {\n    if (email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n      this.setState({ checkEmail: true }, () => this.validateLogin());\n    } else this.setState({ checkEmail: false }, () => this.validateLogin());\n  }\n\n  validatePassword(password) {\n    const minimumLength = 6;\n    if (password.length >= minimumLength) {\n      this.setState({ checkPassword: true }, () => this.validateLogin());\n    } else this.setState({ checkPassword: false }, () => this.validateLogin());\n  }\n\n  validateLogin() {\n    const { checkEmail, checkPassword } = this.state;\n    return checkEmail && checkPassword\n      ? this.setState({ buttonDisable: false }) : this.setState({ buttonDisable: true });\n  }\n\n  handleChange({ target }) {\n    const { id, value } = target;\n\n    this.setState({ [id]: value });\n\n    if (id === 'email') this.validateEmail(value);\n    if (id === 'password') this.validatePassword(value);\n  }\n\n  changePage() {\n    const { history, storeEmail } = this.props;\n    const { email } = this.state;\n    storeEmail(email);\n    history.push('/carteira');\n  }\n\n  renderInputs() {\n    const { email, password } = this.state;\n    return (\n      <>\n        <label htmlFor=\"email\" className=\"form-label\">\n          Email:\n          <input\n            className=\"form-control\"\n            data-testid=\"email-input\"\n            value={ email }\n            id=\"email\"\n            type=\"email\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"password\" className=\"form-label\">\n          Senha:\n          <input\n            className=\"form-control\"\n            data-testid=\"password-input\"\n            value={ password }\n            id=\"password\"\n            type=\"password\"\n            onChange={ this.handleChange }\n          />\n        </label>\n      </>);\n  }\n\n  render() {\n    const { buttonDisable } = this.state;\n    return (\n      <main className=\"main-container\">\n        <h1 className=\"title\">Virtual Wallet</h1>\n        <img src={ bitcoinGif } alt=\"bitcoin gif\" />\n        <form className=\"form-container\">\n          {this.renderInputs()}\n          <button\n            className=\"btn btn-success\"\n            disabled={ buttonDisable }\n            type=\"button\"\n            onClick={ this.changePage }\n          >\n            Entrar\n\n          </button>\n        </form>\n      </main>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  storeEmail: (payload) => dispatch(getUserEmail(payload)),\n});\n\nLogin.propTypes = {\n  history: PropTypes.object,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteRow, editItem } from '../actions';\nimport '../styles/walletTable.css';\n\nclass WalletTable extends Component {\n  renderTableHead() {\n    return (\n      <thead className=\"table-head\">\n        <tr>\n          <th>Descrição</th>\n          <th>Tag</th>\n          <th>Método de pagamento</th>\n          <th>Valor</th>\n          <th>Moeda</th>\n          <th>Câmbio utilizado</th>\n          <th>Valor convertido</th>\n          <th>Moeda de conversão</th>\n          <th>Editar/Excluir</th>\n        </tr>\n      </thead>\n    );\n  }\n\n  render() {\n    const { expenses, editExpenses, deleteExpenses } = this.props;\n    return (\n      <table className=\"table-container\">\n        {this.renderTableHead()}\n        <tbody>\n          {expenses.map((item) => (\n            <tr key={ item.id } style={ { textAlign: 'center' } }>\n              <td>{item.description}</td>\n              <td>{item.tag}</td>\n              <td>{item.method}</td>\n              <td>{`${item.currency} ${parseInt(item.value, 10).toFixed(2)}`}</td>\n              <td>{item.exchangeRates[item.currency].name.split('/')[0]}</td>\n              <td>\n                {`R$ ${parseFloat(item\n                  .exchangeRates[item.currency].ask).toFixed(2)}`}\n              </td>\n              <td>\n                {`R$ ${(item\n                  .exchangeRates[item.currency].ask * item.value).toFixed(2)}`}\n              </td>\n              <td>{item.exchangeRates[item.currency].name.split('/')[1]}</td>\n              <td>\n                <button\n                  onClick={ () => editExpenses(item.id) }\n                  type=\"button\"\n                  className=\"btn btn-warning edit-button\"\n                >\n                  <i className=\"fas fa-edit\" />\n                </button>\n                <button\n                  onClick={ () => deleteExpenses(item.id) }\n                  data-testid=\"delete-btn\"\n                  type=\"button\"\n                  className=\"btn btn-danger delete-button\"\n                >\n                  <i className=\"fas fa-trash\" />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nWalletTable.propTypes = {\n  expenses: PropTypes.array,\n}.isRequired;\n\nconst mapStateToProps = ({ wallet }) => ({\n  expenses: wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  editExpenses: (payload) => dispatch(editItem(payload)),\n  deleteExpenses: (payload) => dispatch(deleteRow(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletTable);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass WalletInputs extends Component {\n  render() {\n    const { labelText, id, onChange, value } = this.props;\n    return (\n      <label htmlFor={ id } className=\"form-label\">\n        {labelText}\n        <input\n          className=\"form-control\"\n          value={ value }\n          onChange={ onChange }\n          id={ id }\n          type=\"text\"\n        />\n      </label>\n    );\n  }\n}\n\nWalletInputs.propTypes = {\n  labelText: PropTypes.string,\n}.isRequired;\n\nexport default WalletInputs;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass WalletSelect extends Component {\n  render() {\n    const { labelText, id, ariaLabel, onChange, currencies, value } = this.props;\n    return (\n      <label htmlFor={ id } className=\"form-label\">\n        {labelText}\n        <select\n          className=\"form-select\"\n          onChange={ onChange }\n          aria-label={ ariaLabel }\n          id={ id }\n          value={ value }\n        >\n          {currencies.map((coin) => <option key={ coin } value={ coin }>{coin}</option>)}\n        </select>\n      </label>\n    );\n  }\n}\n\nWalletSelect.propTypes = {\n  labelText: PropTypes.string,\n}.isRequired;\n\nexport default WalletSelect;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addSpent } from '../actions';\nimport WalletInputs from './WalletInput';\nimport WalletSelect from './WalletSelect';\nimport '../styles/addForm.css'\n\nclass AddForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expenses: {\n        value: '',\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n      },\n      addButton: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExpenses = this.handleExpenses.bind(this);\n    this.checkInputs = this.checkInputs.bind(this);\n  }\n\n  handleExpenses() {\n    const { dispatchSpent } = this.props;\n    const { expenses } = this.state;\n\n    const inicialState = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n\n    dispatchSpent(expenses);\n    this.setState({ expenses: inicialState });\n  }\n\n  handleChange({ target }) {\n    const { expenses } = this.state;\n    const { id, value } = target;\n    this.setState({ expenses: {\n      ...expenses,\n      [id]: value,\n    } });\n    this.checkInputs();\n  }\n\n  checkInputs() {\n    const { expenses: { value, description } } = this.state;\n    return value && description\n      ? this.setState({ addButton: false }) : this.setState({ addButton: true });\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { expenses, addButton } = this.state;\n    return (\n      <form className='add-form-container'>\n        <WalletInputs\n          value={ expenses.value }\n          labelText=\"Valor:\"\n          id=\"value\"\n          onChange={ this.handleChange }\n        />\n        <WalletInputs\n          value={ expenses.description }\n          labelText=\"Descrição:\"\n          id=\"description\"\n          onChange={ this.handleChange }\n        />\n        <WalletSelect\n          labelText=\"Moeda:\"\n          id=\"currency\"\n          ariaLabel=\"moeda\"\n          onChange={ this.handleChange }\n          currencies={ currencies }\n        />\n        <label htmlFor=\"method\" className='form-label'>\n          Método de pagamento:\n          <select\n            className='form-select'\n            onChange={ this.handleChange }\n            aria-label=\"método de pagamento\"\n            id=\"method\"\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\" className='form-label'>\n          Tag:\n          <select\n            className='form-select'\n            onChange={ this.handleChange }\n            name=\"tag\"\n            id=\"tag\"\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button\n          className=\"btn btn-success\"\n          onClick={ this.handleExpenses }\n          type=\"button\"\n          disabled={ addButton }\n        >\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ wallet }) => ({\n  currencies: wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSpent: (payload) => dispatch(addSpent(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { replaceItem } from '../actions';\nimport WalletInputs from './WalletInput';\nimport WalletSelect from './WalletSelect';\nimport '../styles/editForm.css'\n\nclass EditForm extends Component {\n  constructor(props) {\n    super(props);\n    const {selectedItem} = this.props\n\n    this.state = {\n      expenses: {\n        id: selectedItem.id,\n        value: selectedItem.value,\n        description: selectedItem.description,\n        currency: selectedItem.currency,\n        method: selectedItem.method,\n        tag: selectedItem.tag,\n        exchangeRates: selectedItem.exchangeRates,\n      },\n      addButton: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.checkInputs = this.checkInputs.bind(this);\n  }\n\n  handleEdit() {\n    const { dispatchEdit, selectedItem } = this.props;\n    const { expenses } = this.state;\n\n    dispatchEdit(selectedItem.id, expenses);\n  }\n\n  handleChange({ target }) {\n    const { expenses } = this.state;\n    const { id, value } = target;\n    this.setState({ expenses: {\n      ...expenses,\n      [id]: value,\n    } });\n    this.checkInputs();\n  }\n\n  checkInputs() {\n    const { expenses: { value, description } } = this.state;\n    return value && description\n      ? this.setState({ addButton: false }) : this.setState({ addButton: true });\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { expenses, addButton } = this.state;\n    return (\n      <form className='edit-form-container'>\n          <WalletInputs\n            value={ expenses.value }\n            labelText=\"Valor:\"\n            id=\"value\"\n            onChange={ this.handleChange }\n          />\n          <WalletInputs\n            value={ expenses.description }\n            labelText=\"Descrição:\"\n            id=\"description\"\n            onChange={ this.handleChange }\n          />\n          <WalletSelect\n            labelText=\"Moeda:\"\n            id=\"currency\"\n            ariaLabel=\"moeda\"\n            onChange={ this.handleChange }\n            currencies={ currencies }\n            value={expenses.currency}\n          />\n          <label htmlFor=\"method\" className=\"form-label\">\n            Método de pagamento:\n            <select\n              className=\"form-control\"\n              onChange={ this.handleChange }\n              aria-label=\"método de pagamento\"\n              id=\"method\"\n              value={expenses.method}\n            >\n              <option value=\"Dinheiro\">Dinheiro</option>\n              <option value=\"Cartão de crédito\">Cartão de crédito</option>\n              <option value=\"Cartão de débito\">Cartão de débito</option>\n            </select>\n          </label>\n          <label htmlFor=\"tag\" className='form-label'>\n            Tag:\n            <select\n              className=\"form-select\"\n              value={expenses.tag}\n              onChange={ this.handleChange }\n              name=\"tag\"\n              id=\"tag\"\n            >\n              <option value=\"Alimentação\">Alimentação</option>\n              <option value=\"Lazer\">Lazer</option>\n              <option value=\"Trabalho\">Trabalho</option>\n              <option value=\"Transporte\">Transporte</option>\n              <option value=\"Saúde\">Saúde</option>\n            </select>\n          </label>\n          <button\n            className=\"btn btn-warning\"\n            onClick={ this.handleEdit }\n            type=\"button\"\n            disabled={ addButton }\n          >\n            Editar despesa\n          </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ wallet }) => ({\n  currencies: wallet.currencies,\n  selectedItem: wallet.selectedItem,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchEdit: (...payload) => dispatch(replaceItem(...payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addSpent, getCoins } from '../actions';\nimport WalletTable from '../components/WalletTable';\nimport AddForm from '../components/AddForm';\nimport EditForm from '../components/EditForm';\nimport '../styles/wallet.css';\nimport bitcoinImage from '../images/bitcoin.gif';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderHeader = this.renderHeader.bind(this);\n    this.getCoinsOptions = this.getCoinsOptions.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExpenses = this.handleExpenses.bind(this);\n    this.totalExpenses = this.totalExpenses.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCoinsOptions();\n  }\n\n  componentDidUpdate() {\n    this.totalExpenses();\n  }\n\n  getCoinsOptions() {\n    const { fetchCoins } = this.props;\n    fetchCoins();\n  }\n\n  handleExpenses() {\n    const { dispatchSpent } = this.props;\n    const { expenses } = this.state;\n\n    const inicialState = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'dinheiro',\n      tag: 'Alimentação',\n    };\n\n    dispatchSpent(expenses);\n    this.setState({ expenses: inicialState });\n  }\n\n  handleChange({ target }) {\n    const { expenses } = this.state;\n    const { id, value } = target;\n    this.setState({ expenses: {\n      ...expenses,\n      [id]: value,\n    } });\n    this.checkInputs();\n  }\n\n  totalExpenses() {\n    const { expenses } = this.props;\n    return expenses.reduce((itemAcc, item) => {\n      const convertedValue = item.exchangeRates[item.currency].ask;\n      itemAcc += item.value * convertedValue;\n      return itemAcc;\n    }, 0).toFixed(2);\n  }\n\n  renderHeader() {\n    const { email } = this.props;\n    return (\n      <header className=\"header-container\">\n        <img src={ bitcoinImage } alt=\"bitcoin gif\" />\n        <span\n          data-testid=\"email-field\"\n        >\n          {email}\n        </span>\n        <div>\n          <span\n            data-testid=\"total-field\"\n          >\n            {`Despesa Total: ${this.totalExpenses()}`}\n          </span>\n          <span\n            data-testid=\"header-currency-field\"\n          >\n            BRL\n          </span>\n        </div>\n      </header>\n    );\n  }\n\n  render() {\n    const { editItem } = this.props;\n    return (\n      <>\n        {this.renderHeader()}\n        {editItem ? <EditForm /> : <AddForm />}\n        <WalletTable />\n      </>);\n  }\n}\n\nconst mapStateToProps = ({ user, wallet }) => ({\n  email: user.email,\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n  editItem: wallet.editItem,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCoins: () => dispatch(getCoins()),\n  dispatchSpent: (payload) => dispatch(addSpent(payload)),\n});\n\nWallet.propTypes = {\n  email: PropTypes.string,\n  fetchCoins: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './styles/app.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/carteira\" component={ Wallet } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { GET_USER_EMAIL } from '../actions';\n\nconst INICIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INICIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_USER_EMAIL:\n    return {\n      ...state,\n      email: action.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import {\n  COINS_LOADING,\n  COINS_SUCCESS,\n  COINS_FAIL,\n  SPENT_SUCCESS,\n  DELETE_ITEM,\n  EDIT_ITEM,\n  REPLACE_ITEM } from '../actions';\n\nconst INICIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editItem: false,\n};\n\nconst wallet = (state = INICIAL_STATE, action) => {\n  switch (action.type) {\n  case COINS_LOADING:\n    return {\n      ...state,\n      isLoading: true,\n    };\n  case COINS_SUCCESS:\n    return {\n      ...state,\n      isLoading: false,\n      currencies: action.coins,\n    };\n  case COINS_FAIL:\n    return {\n      ...state,\n      isLoading: false,\n      error: action.error,\n    };\n  case SPENT_SUCCESS:\n    return {\n      ...state,\n      expenses: [...state.expenses, { ...action.spent, id: state.expenses.length }],\n      isLoading: false,\n    };\n  case DELETE_ITEM:\n    return {\n      ...state,\n      expenses: state.expenses.filter(({ id }) => id !== action.itemId),\n    };\n  case EDIT_ITEM:\n    return {\n      ...state,\n      selectedItem: state.expenses.find(({ id }) => id === action.selectedItem),\n      editItem: action.editItem,\n    };\n  case REPLACE_ITEM:\n    return {\n      ...state,\n      expenses: state.expenses\n        .map((item) => (item.id === action.itemId ? action.updatedItem : item)),\n      editItem: false,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/virtual-wallet\">\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}